generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id                 Int               @id @default(autoincrement()) @db.UnsignedInt
  /// Tên sản phẩm (tiếng Việt)
  name               String            @db.Text
  /// Đường dẫn đến ảnh mô tả sản phẩm
  posterUrl          String?            @db.VarChar(255)
  /// ID của danh mục
  categoryId         Int               @db.UnsignedInt
  category           Category          @relation(fields: [categoryId], references: [id])
  /// Đường dẫn đến datasheet của sản phẩm
  datasheetLink      String?           @db.VarChar(500)
  /// Đuôi đường dẫn đến trang thông tin sản phẩm
  slug               String            @db.VarChar(200) @unique
  /// Mô tả của sản phẩm, chứa mã HTML
  desc               String?           @db.Text
  /// Cân nặng tính theo gram 
  weight             Int               @db.UnsignedInt
  /// Giá mặc định để hiển thị
  price              Decimal           @db.Decimal(15,3) @default(0)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("ProductCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("ProductModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  /// Trạng thái hiển thị của sản phẩm
  isActive           Boolean           @default(true)

  wholesale          Wholesale?
  attributes         ProductAttribute[]
  images             ProductImage[]
  highlights         ProductHighlight[]
  orderDetails       OrderDetail[]
  cartDetails        CartDetail[]

  @@fulltext([name])
  @@index([slug])
}

model Category {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  /// Tên danh mục (tiếng Việt)
  name       String     @db.Text
  /// Đường dẫn đến ảnh danh mục
  imageUrl   String?    @db.VarChar(255)
  /// ID của danh mục cha - level 1 thì null
  parentId   Int?       @db.UnsignedInt
  parent     Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id], onDelete: Restrict)
  /// Bậc của danh mục từ 1 đến 3
  level      Int        @db.UnsignedTinyInt
  /// Đuôi đường dẫn đến trang danh mục
  slug       String     @db.VarChar(150) @unique
  // Trạng thái hiển thị cho danh mục
  isActive           Boolean           @default(true)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("CategoryCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("CategoryModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  children   Category[] @relation("CategoryHierarchy")
  products   Product[]
  attributes Attribute[]

  @@index([slug])
}

model Attribute {
  id         Int               @id @default(autoincrement()) @db.UnsignedInt
  // Tên thông số (tiếng Việt)
  name       String            @db.Text
  // ID danh mục chứa thông số
  categoryId Int               @db.UnsignedInt
  category   Category          @relation(fields: [categoryId], references: [id], onDelete: Restrict)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("AttributeCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("AttributeModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  values     AttributeValue[]
}

model AttributeValue {
  id           Int          @id @default(autoincrement()) @db.UnsignedInt
  /// ID thông só chứa giá trị này
  attributeId  Int          @db.UnsignedInt
  attribute    Attribute       @relation(fields: [attributeId], references: [id], onDelete: Restrict)
  /// Giá trị của thông số (tiếng Việt)
  value        String          @db.Text

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("AttrValCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("AttrValModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  products     ProductAttribute[]
}

model ProductAttribute {
  id              Int             @id @default(autoincrement()) @db.UnsignedInt
  /// ID của sản phẩm có giá trị thông số này
  productId       Int             @db.UnsignedInt
  product         Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  /// ID của giá trị thông số
  attributeValueId Int            @db.UnsignedInt
  attributeValue  AttributeValue @relation(fields: [attributeValueId], references: [id], onDelete: Cascade)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("ProdAttrCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("ProdAttrModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

}

model ProductImage {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  /// ID của sản phẩm
  productId  Int     @db.UnsignedInt
  product    Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  /// Đường dẫn đến ảnh
  imageUrl   String   @db.VarChar(255)
  /// Vị trí hiển thị trong danh sách ảnh
  position   Int       @db.UnsignedInt @default(1)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("ProdImgCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("ProdImgModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

}

model Wholesale {
  id         Int             @id @default(autoincrement()) @db.UnsignedInt
  /// ID của sản phẩm
  productId  Int             @unique @db.UnsignedInt
  product    Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  /// Số lượng mua tối thiểu
  min_quantity  Int          @default(1) @db.UnsignedTinyInt
  /// Số lượng mua tối đa
  max_quantity  Int         @db.UnsignedInt
  ///  Bội số mua
  quanity_step  Int          @db.UnsignedTinyInt @default(1)
  /// Đơn vị mua (tiếng Việt)
  unit        String         @db.TinyText
  /// Thuế sản phẩm theo đơn vị phần trăm
  vat         Decimal            @db.Decimal(5,2) @default(0)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("WholesaleCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("WholesaleModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  details    WholesaleDetail[]
}

model WholesaleDetail {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  /// ID của bảng giá
  wholesaleId Int         @db.UnsignedInt
  wholesale   Wholesale  @relation(fields: [wholesaleId], references: [id], onDelete: Cascade)
  /// Dòng mô tả cho phạm vi giá áp dụng
  desc        String      @db.TinyText
  /// Giá trị dưới để áp dụng giá
  min         Int         @db.UnsignedInt
  /// Giá trị trên để áp dụng giá
  max         Int?        @db.UnsignedInt
  /// Đơn giá
  price       Decimal     @db.Decimal(15,3)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("WhDetCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("WhDetModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

}

enum HighlightType {
  new
  hot
  bestsell
}

model ProductHighlight {
  id        Int           @id @default(autoincrement()) @db.UnsignedTinyInt
  /// ID của sản phẩm
  productId Int       @db.UnsignedInt
  product   Product    @relation(fields: [productId], references: [id], onDelete: Restrict)
  /// Loại danh sách nổi bật
  type      HighlightType
  /// Vị trí hiển thị trong danh sách
  position  Int       @db.UnsignedTinyInt @default(1)
  
  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("ProdHighCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("ProdHighModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
}

enum Role {
  user
  admin
}

model Account {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  /// Địa chỉ email
  email         String    @unique
  /// Mật khẩu
  password      String?
  /// Phân quyền của tài khoản
  role          Role      @default(user)
  /// Tài khoản được đăng ký bằng google hay không
  isGoogleSigned  Boolean   @default(false)
  /// Tài khoản đã xác thực email
  isEmailAuth   Boolean   @default(false)
  /// Tài khoản đang khả dụng và có thể đăng nhập
  isActive      Boolean   @default(true)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int?               @db.UnsignedInt
  creator            User?              @relation("AccountCreated", fields: [creatorId], references: [id])
  modifierId         Int?               @db.UnsignedInt
  modifier           User?              @relation("AccountModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  user          User?      
  @@index([email])
}

model User {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  /// ID của tài khoản liên kết
  accountId   Int       @unique @db.UnsignedInt
  account     Account   @relation(fields: [accountId], references: [id], onDelete: Restrict)
  /// Tên người dùng
  name        String    @db.TinyText
  /// Đường dẫn đến ảnh đại diện
  avatarUrl   String?   @db.VarChar(255)
  /// Số điện thoại
  phone       String?    @db.VarChar(20)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int?               @db.UnsignedInt
  creator            User?              @relation("UserCreated", fields: [creatorId], references: [id])
  modifierId         Int?               @db.UnsignedInt
  modifier           User?              @relation("UserModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  addresses   Address[]
  orders      Order[]
  cartDetails CartDetail[]

  @@fulltext([name])
  ProductCreateds Product[] @relation("ProductCreated") 
  ProductModifieds Product[] @relation("ProductModified") 
  CategoryCreateds Category[] @relation("CategoryCreated") 
  CategoryModifieds Category[] @relation("CategoryModified")
  // Attribute
  AttributeCreateds Attribute[] @relation("AttributeCreated") 
  AttributeModifieds Attribute[] @relation("AttributeModified") 

  // AttributeValue
  AttributeValueCreateds AttributeValue[] @relation("AttrValCreated") 
  AttributeValueModifieds AttributeValue[] @relation("AttrValModified") 

  // ProductAttribute
  ProductAttributeCreateds ProductAttribute[] @relation("ProdAttrCreated") 
  ProductAttributeModifieds ProductAttribute[] @relation("ProdAttrModified") 

  // ProductImage
  ProductImageCreateds ProductImage[] @relation("ProdImgCreated") 
  ProductImageModifieds ProductImage[] @relation("ProdImgModified") 

  // Wholesale
  WholesaleCreateds Wholesale[] @relation("WholesaleCreated") 
  WholesaleModifieds Wholesale[] @relation("WholesaleModified") 

  // WholesaleDetail
  WholesaleDetailCreateds WholesaleDetail[] @relation("WhDetCreated") 
  WholesaleDetailModifieds WholesaleDetail[] @relation("WhDetModified") 

  // ProductHighlight
  ProductHighlightCreateds ProductHighlight[] @relation("ProdHighCreated") 
  ProductHighlightModifieds ProductHighlight[] @relation("ProdHighModified") 

  // Account
  AccountCreateds Account[] @relation("AccountCreated") 
  AccountModifieds Account[] @relation("AccountModified") 

  // User
  UserCreateds User[] @relation("UserCreated") 
  UserModifieds User[] @relation("UserModified") 

  // Order
  OrderCreateds Order[] @relation("OrderCreated")
  OrderModifieds Order[] @relation("OrderModified")

  // OrderDetail
  OrderDetailCreateds OrderDetail[] @relation("OrdDetCreated")
  OrderDetailModifieds OrderDetail[] @relation("OrdDetModified")

  // OrderTimeline
  OrderTimelineCreateds OrderTimeline[] @relation("OrdTimeCreated")
  OrderTimelineModifieds OrderTimeline[] @relation("OrdTimeModified")

  // Banner
  BannerCreateds Banner[] @relation("BannerCreated")
  BannerModifieds Banner[] @relation("BannerModified")
}

model Address {
  id            Int     @id @default(autoincrement()) @db.UnsignedInt
  /// ID người dùng
  userId        Int       @db.UnsignedInt
  /// Tên định danh cho địa chỉ (tiếng Việt)
  alias         String    @db.TinyText
  /// Tên người nhận (tiếng Việt)
  receiverName  String    @db.TinyText
  /// Số điện thoại người nhận
  receiverPhone String    @db.VarChar(15)
  /// Tên tỉnh
  province      String    @db.TinyText
  /// Tên quận, huyện
  district      String    @db.TinyText
  /// Tên xã
  commune       String    @db.TinyText
  /// Địa chỉ chi tiết
  detail        String    @db.Text

  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  user          User    @relation(fields: [userId], references: [id])
}

model Order {
  id                   Int            @id @default(autoincrement()) @db.UnsignedInt
  /// Mã đơn hàng để public
  code                 String         @default(cuid())
  /// ID người đặt đơn hàng
  userId               Int            @db.UnsignedInt
  /// Trạng thái (1:pending, 2:paid, 3: processing, 4: shipping, 5: done, 0: cancelel)
  status               Int            @db.TinyInt
  /// Tên tỉnh
  province      String    @db.TinyText
  /// Tên quận, huyện
  district      String    @db.TinyText
  /// Tên xã
  commune       String    @db.TinyText
  /// Địa chỉ chi tiết
  detail        String    @db.Text
  /// Tên người nhận
  receiverName         String         @db.TinyText
  /// Số điện thoại người nhận
  receiverPhone        String         @db.VarChar(15)
  /// Hình thức giao (1: Tại cửa hàng, 2: Bưu điện)
  deliveryType         Int            @db.TinyInt
  /// Phí giao hàng
  deliveryFee          Decimal        @db.Decimal(15,3)
  /// Thời gian nhận sớm nhất
  earliestReceiveTime  DateTime
  /// Thời gian nhận trễ nhất
  latestReceiveTime    DateTime
  /// Tổng tiền
  total              Decimal           @db.Decimal(15,3)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("OrderCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("OrderModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  user                 User            @relation(fields: [userId], references: [id])
  details              OrderDetail[]
  timelines            OrderTimeline[]
}

model OrderDetail {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  /// ID đơn hàng
  orderId    Int     @db.UnsignedInt
  /// ID sản phẩm
  productId  Int     @db.UnsignedInt
  /// Số lượng đặt
  quantity   Int     @db.UnsignedInt
  /// Đơn giá
  unitPrice  Decimal  @db.Decimal(15,3)
  /// Phần trăm thuế áp dụng
  vat        Decimal      @db.Decimal(5,2) @default(0)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("OrdDetCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("OrdDetModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  product    Product @relation(fields: [productId], references: [id], onDelete: Restrict)
  order      Order   @relation(fields: [orderId], references: [id], onDelete: Restrict)
}

model OrderTimeline {
  id             Int         @id @default(autoincrement()) @db.UnsignedInt
  orderId        Int         @db.UnsignedInt
  /// Trạng thái (1:pending, 2:paid, 3: processing, 4: shipping, 5: done, 0: cancel)
  status         Int         @db.TinyInt
  /// Hiển thị thông báo cho khách đặt đơn
  isRead         Boolean     @default(false)
  /// Ghi chú cho trạng thái
  desc           String
  
  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("OrdTimeCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("OrdTimeModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  order          Order       @relation(fields: [orderId], references: [id], onDelete: Restrict)
}

model CartDetail {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  /// ID người dùng
  userId     Int     @db.UnsignedInt
  /// ID sản phẩm
  productId  Int     @db.UnsignedInt

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user       User    @relation(fields: [userId], references: [id])
  product    Product @relation(fields: [productId], references: [id])
}

model Banner {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  /// Đường dẫn đến ảnh quảng cáo
  imageUrl  String  @db.VarChar(255)
  /// Vị trí hiển thị trong danh sách
  position  Int     @db.UnsignedTinyInt @default(1)

  version            Int               @default(1) @db.UnsignedInt
  creatorId          Int               @db.UnsignedInt
  creator            User              @relation("BannerCreated", fields: [creatorId], references: [id])
  modifierId         Int               @db.UnsignedInt
  modifier           User              @relation("BannerModified", fields: [modifierId], references: [id])
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
}
